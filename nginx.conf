server {
    listen 80;
    index index.html;
    server_tokens off;
    client_max_body_size 50M;
    
    # Глобальное сжатие для всех ответов
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types 
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # Безопасность заголовков
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # Ограничение типов файлов для загрузки
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Кеширование статики
    location /static/ {
        alias /backend_static/;
        expires 7d;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        access_log off;
        
        # Безопасность: запрет исполнения скриптов
        location ~* \.(php|py|pl|sh|cgi)$ {
            deny all;
        }
        
        # Оптимизация для статических файлов
        location ~* \.(css|js)$ {
            add_header Cache-Control "public, immutable, max-age=604800";
            expires 7d;
        }
    }

    # Кеширование шрифтов и иконок из статики
    location ~* /static/.*\.(woff|woff2|ttf|eot|otf|ico|svg)$ {
        root /backend_static;
        expires 90d;  # Долгое кеширование для шрифтов
        add_header Cache-Control "public, immutable, max-age=7776000";  # 90 дней
        add_header Vary "Accept-Encoding";
        access_log off;
        
        # Безопасность шрифтов
        add_header X-Content-Type-Options "nosniff";
        add_header X-Frame-Options "SAMEORIGIN";
        try_files $uri =404;
    }

    # Кеширование изображений из основной статики (img folder)
    location ~* /static/img/.*\.(jpg|jpeg|png|gif|webp|bmp|tiff)$ {
        root /backend_static;
        expires 60d;  # Долгое кеширование для статических изображений
        add_header Cache-Control "public, immutable, max-age=5184000";  # 60 дней
        add_header Vary "Accept-Encoding";
        access_log off;
        
        # Безопасность изображений
        add_header X-Content-Type-Options "nosniff";
        add_header X-Frame-Options "SAMEORIGIN";
        try_files $uri =404;
    }

    # Кеширование для /media/ (публичные медиа-файлы загруженные админом)
    location /static/media/ {
        alias /backend_media/;
        expires 30d;
        add_header Cache-Control "public, max-age=2592000";  # 30 дней
        add_header Vary "Accept-Encoding";
        access_log off;
        
        # Безопасность: разрешены только изображения и документы
        location ~* \.(jpg|jpeg|png|gif|svg|webp|pdf|doc|docx)$ {
            add_header X-Content-Type-Options "nosniff";
            add_header X-Frame-Options "SAMEORIGIN";
            try_files $uri =404;
        }
        
        # Запрет исполняемых файлов
        location ~* \.(php|py|pl|sh|cgi|exe|bat|com|js|html)$ {
            deny all;
        }
    }

    # Кеширование для /user_images/ (пользовательские изображения)
    location /static/user_images/ {
        alias /backend_user_images/;
        expires 7d;
        add_header Cache-Control "public, max-age=604800";  # 7 дней
        add_header Vary "Accept-Encoding";
        access_log off;
        
        # Строгие ограничения: только изображения
        location ~* \.(jpg|jpeg|png|gif|webp)$ {
            add_header X-Content-Type-Options "nosniff";
            add_header X-Frame-Options "SAMEORIGIN";
            # Дополнительная безопасность для пользовательского контента
            add_header Content-Security-Policy "default-src 'none'; img-src 'self'";
            add_header Referrer-Policy "strict-origin-when-cross-origin";
            try_files $uri =404;
        }
        
        # Запрет всех остальных типов файлов
        location ~* \..*$ {
            deny all;
            return 403;
        }
    }

    # Прокси для backend
    location / {
        proxy_pass http://backend:5000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Таймауты
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Буферизация
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        
        # Безопасность
        proxy_hide_header X-Powered-By;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
    }
    
    # Обработка ошибок
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
}
}
