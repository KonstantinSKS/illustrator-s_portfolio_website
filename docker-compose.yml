
volumes:
  pg_data:
  static:
  media:

services:

  db:
    image: postgres:16
    env_file:
      - .env
    volumes:
      - pg_data:/var/lib/postgresql/
    ports:
      - 5432:5432
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB'" ]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always

  backend:
    build: ./
    restart: always
    volumes:
      - static:/app/static
      - media:/app/media
    depends_on:
      db:
        condition: service_healthy
    env_file: .env
    command: gunicorn --bind 0.0.0.0:5000 run:app
    ports:
      - 5000:5000

  nginx:
    image: nginx:latest
    ports:
      - 80:80
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - static:/app/static
      - media:/app/media
    depends_on:
      - backend
    restart: always

    # image: nginx:latest
    # ports:
    #   - "80:80"
    # volumes:
    #   - ./nginx.conf:/etc/nginx/conf.d/default.conf
    #   - static:/app/static
    #   - media:/app/media
    # depends_on:
    #   - backend
    # restart: always


  # web:
  #   build: .
  #   command: flask run --host=0.0.0.0
  #   ports:
  #     - "5000:5000"
  #   volumes:
  #     - .:/app
  #   environment:
  #     - FLASK_DEBUG=${FLASK_DEBUG}
  #     - POSTGRES_DATABASE_URL=postgresql://postgres:postgres@db/postgres
  #     - SQLITE_DATABASE_URL=sqlite:///db.sqlite3
  #     - SECRET_KEY=${SECRET_KEY}
  #   depends_on:
  #     - db
